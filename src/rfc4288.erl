%%% Do not modify this file, it is automatically generated by abnfc.
%%% All changes will be lost when it is regenerated.
%%% Generated by abnfc_gen on 2018-07-11 15:39:45

-module(rfc4288).

-export([decode/2, 'parameter-name'/0, 'reg-name'/0,
	 'reg-name-chars'/0, 'subtype-name'/0, 'type-name'/0]).

-include("rfc4288.hrl").

decode('type-name', Str) -> ('type-name'())(Str);
decode('subtype-name', Str) -> ('subtype-name'())(Str);
decode('reg-name', Str) -> ('reg-name'())(Str);
decode('reg-name-chars', Str) ->
    ('reg-name-chars'())(Str);
decode('parameter-name', Str) ->
    ('parameter-name'())(Str).

'type-name'() -> 'reg-name'().

'subtype-name'() -> 'reg-name'().

'reg-name'() -> '__repeat'(1, 127, 'reg-name-chars'()).

'reg-name-chars'() ->
    '__alt'([fun ([C | Tl]) when (C >= 35) and (C =< 36) ->
		     {ok, C, Tl};
		 ([C | Tl]) when (C >= 45) and (C =< 46) -> {ok, C, Tl};
		 ([C | Tl]) when (C >= 94) and (C =< 95) -> {ok, C, Tl};
		 ([C | Tl]) when C == 33 -> {ok, C, Tl};
		 ([C | Tl]) when C == 38 -> {ok, C, Tl};
		 ([C | Tl]) when C == 43 -> {ok, C, Tl};
		 (_) -> fail
	     end,
	     'ALPHA'(), 'DIGIT'()]).

'parameter-name'() -> 'reg-name'().

'__alt'(Ps) -> fun (T) -> '__do_alt'(Ps, T) end.

'__do_alt'([P | Ps], T) ->
    case P(T) of
      {ok, _R, _T1} = Res -> Res;
      fail -> '__do_alt'(Ps, T)
    end;
'__do_alt'([], _) -> fail.

'__repeat'(Min, Max, P) -> '__repeat'(Min, Max, P, 0).

'__repeat'(Min, Max, P, Found) ->
    fun (T) -> '__do_repeat'(Min, Max, P, Found, T) end.

'__do_repeat'(Min, Max, P, Found, T) ->
    case P(T) of
      {ok, R1, T1} when Max == Found + 1 -> {ok, [R1], T1};
      {ok, R1, T1} ->
	  case '__do_repeat'(Min, Max, P, Found + 1, T1) of
	    {ok, R2, T2} -> {ok, [R1 | R2], T2};
	    fail when Found >= Min -> {ok, [R1], T1};
	    fail -> fail
	  end;
      fail when Found >= Min -> {ok, [], T};
      fail -> fail
    end.
